import 'dart:async';
import 'package:flutter/material.dart';
import 'package:webview_flutter/webview_flutter.dart';
import 'package:connectivity/connectivity.dart';

void main() {
  runApp(const MyApp());
}

class MyApp extends StatelessWidget {
  const MyApp({Key? key}) : super(key: key);

  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'Motema Safaris',
      theme: ThemeData(
        primarySwatch: Colors.red,
        scaffoldBackgroundColor: Colors.white,
        appBarTheme: AppBarTheme(
          iconTheme: IconThemeData(color: Colors.white),
        ),
        textTheme: TextTheme(
          headline6: TextStyle(color: Colors.white),
        ),
        bottomNavigationBarTheme: BottomNavigationBarThemeData(
          selectedItemColor: Colors.black,
        ),
      ),
      home: const SplashScreen(),
    );
  }
}

class SplashScreen extends StatefulWidget {
  const SplashScreen({Key? key}) : super(key: key);

  @override
  _SplashScreenState createState() => _SplashScreenState();
}

class _SplashScreenState extends State<SplashScreen> {
  @override

  void _navigateToHome() {
    Timer(
      const Duration(seconds: 2),
          () {
        Navigator.pushReplacement(
          context,
          MaterialPageRoute(
            builder: (context) => const MyWebView(
              // Removed const from MyWebView instantiation
              initialUrl: 'https://derdy.namibiadailynews.info/motema-safaris/tours',
              drawerLinks: [
                'https://derdy.namibiadailynews.info/motema-safaris/tours',
                'https://derdy.namibiadailynews.info/motema-safaris/meet-our-team',
                'https://derdy.namibiadailynews.info/motema-safaris/faq',
                'https://derdy.namibiadailynews.info/motema-safaris/testimonial',
                'https://derdy.namibiadailynews.info/motema-safaris/privacy-policy-2',
              ],
              bottomNavLinks: [
                'https://derdy.namibiadailynews.info/motema-safaris/tours',
                'https://derdy.namibiadailynews.info/motema-safaris/about-us',
                'https://derdy.namibiadailynews.info/motema-safaris/cart-2',
                'https://derdy.namibiadailynews.info/motema-safaris/contact-us',
              ],
            ),
          ),
        );
      },
    );
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      body: Center(
        child: Column(
          mainAxisAlignment: MainAxisAlignment.center,
          children: [
            Image.asset(
              'assets/splash_icon.png',
              width: 150,
              height: 150,
            ),
            const SizedBox(height: 20),
            const Text(
              'Making Memories our Speciality',
              style: TextStyle(fontSize: 20),
            ),
          ],
        ),
      ),
    );
  }
}

class OfflineScreen extends StatelessWidget {
  final VoidCallback retryCallback;

  const OfflineScreen({Key? key, required this.retryCallback}) : super(key: key);

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      body: Center(
        child: Column(
          mainAxisAlignment: MainAxisAlignment.center,
          children: [
            const Text(
              'No internet connection',
              style: TextStyle(fontSize: 18),
            ),
            const SizedBox(height: 20),
            ElevatedButton(
              onPressed: retryCallback,
              child: const Text('Retry'),
            ),
          ],
        ),
      ),
    );
  }
}

class CategoriesScreen extends StatelessWidget {
  const CategoriesScreen({Key? key}) : super(key: key);

  @override
  Widget build(BuildContext context) {
    return GridView.builder(
      gridDelegate: const SliverGridDelegateWithFixedCrossAxisCount(
        crossAxisCount: 2,
        mainAxisSpacing: 16.0,
        crossAxisSpacing: 16.0,
        childAspectRatio: 1.0,
      ),
      itemCount: categories.length,
      itemBuilder: (context, index) {
        return _buildCategoryItem(context, categories[index]);
      },
    );
  }

  Widget _buildCategoryItem(BuildContext context, Category category) {
    return GestureDetector(
      onTap: () {
        // Handle category tap
        // You can navigate to an external link or perform any other action
        print('Tapped on category: ${category.name}');
      },
      child: Card(
        elevation: 4.0,
        shape: RoundedRectangleBorder(borderRadius: BorderRadius.circular(8.0)),
        child: Column(
          mainAxisAlignment: MainAxisAlignment.center,
          children: [
            Image.asset(
              category.imagePath,
              width: 80,
              height: 80,
            ),
            const SizedBox(height: 8.0),
            Text(
              category.name,
              style: const TextStyle(fontSize: 16.0, fontWeight: FontWeight.bold),
            ),
          ],
        ),
      ),
    );
  }
}

class MyWebView extends StatefulWidget {
  final String initialUrl;
  final List<String> drawerLinks;
  final List<String> bottomNavLinks;

  const MyWebView({
    Key? key,
    required this.initialUrl,
    required this.drawerLinks,
    required this.bottomNavLinks,
  }) : super(key: key);

  @override
  _MyWebViewState createState() => _MyWebViewState();
}

class _MyWebViewState extends State<MyWebView> {
  int _currentIndex = 0;
  late WebViewController _webViewController;

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: const Text('Motema Safaris', style: TextStyle(color: Colors.white)),
        backgroundColor: Colors.red,
        iconTheme: IconThemeData(color: Colors.white),
        actions: [
          IconButton(
            icon: const Icon(
              Icons.refresh,
              color: Colors.white,
            ),
            onPressed: () {
              _webViewController.reload();
            },
          ),
        ],
      ),
      drawer: Drawer(
        child: ListView(
          children: const [
            UserAccountsDrawerHeader(
              accountName: Text('Motema Safaris', style: TextStyle(color: Colors.white)),
              accountEmail: Text('info@motemasafaris.com', style: TextStyle(color: Colors.white)),
              currentAccountPicture: CircleAvatar(
                backgroundImage: AssetImage('assets/logo.png'),
              ),
            ),
            // ... (unchanged)
          ],
        ),
      ),
      body: CategoriesScreen(), // Display CategoriesScreen instead of WebView
      bottomNavigationBar: BottomNavigationBar(
        currentIndex: _currentIndex,
        onTap: (index) {
          setState(() {
            _currentIndex = index;
          });
          _loadUrl(widget.bottomNavLinks[index]);
        },
        items: const [
          BottomNavigationBarItem(
            icon: Icon(Icons.home, color: Colors.black),
            label: 'Home',
          ),
          BottomNavigationBarItem(
            icon: Icon(Icons.info, color: Colors.black),
            label: 'About Us',
          ),
          BottomNavigationBarItem(
            icon: Icon(Icons.shopping_cart, color: Colors.black),
            label: 'Cart',
          ),
          BottomNavigationBarItem(
            icon: Icon(Icons.contact_mail, color: Colors.black),
            label: 'Contact Us',
          ),
        ],
      ),
    );
  }

  Widget _buildDrawerItem(IconData icon, String title, String url) {
    return Column(
      children: [
        ListTile(
          leading: Icon(icon),
          title: Text(title),
          onTap: () {
            Navigator.pop(context);
            _loadUrl(url);
          },
        ),
        Divider(), // Add a divider under each menu item
      ],
    );
  }

  void _loadUrl(String url) {
    _webViewController.loadUrl(url);
  }
}

class Category {
  final String name;
  final String imagePath;
  final String externalLink;

  Category({
    required this.name,
    required this.imagePath,
    required this.externalLink,
  });
}

List<Category> categories = [
  Category(
    name: 'SADC Tours',
    imagePath: 'assets/sdc-tour.jpg',
    externalLink: 'https://example.com/category1',
  ),
  Category(
    name: 'Personalized Tour',
    imagePath: 'assets/personalized-tour.jpg',
    externalLink: 'https://example.com/category2',
  ),
  // Add more categories as needed
  Category(
    name: 'Guided | Lodge',
    imagePath: 'assets/guided-lodge.jpg',
    externalLink: 'https://example.com/category3',
  ),
  Category(
    name: 'Guided | Camping',
    imagePath: 'assets/guided-camping.jpg',
    externalLink: 'https://example.com/category4',
  ),
  Category(
    name: 'Airport Shuttle',
    imagePath: 'assets/airport-shuttle.jpg',
    externalLink: 'https://example.com/category5',
  ),
  Category(
    name: 'Car Rentals',
    imagePath: 'assets/car-rentals.jpg',
    externalLink: 'https://example.com/category6',
  ),
  Category(
    name: 'Self-drive | Lodge',
    imagePath: 'assets/self-drive-lodge.jpg',
    externalLink: 'https://example.com/category7',
  ),
  Category(
    name: 'Category 8',
    imagePath: 'assets/self-drive-camping.jpg',
    externalLink: 'https://example.com/category8',
  ),
];
